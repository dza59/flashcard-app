// Generated by Xata Codegen 0.29.4. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "sets",
    columns: [
      { name: "title", type: "string" },
      { name: "description", type: "text" },
      { name: "image", type: "file", file: { defaultPublicAccess: true } },
      { name: "creator", type: "string" },
      { name: "cards", type: "int", defaultValue: "0" },
      { name: "private", type: "bool", defaultValue: "true" },
    ],
    revLinks: [
      { column: "set", table: "cards" },
      { column: "set", table: "user_sets" },
      { column: "set", table: "learnings" },
    ],
  },
  {
    name: "cards",
    columns: [
      { name: "question", type: "string" },
      { name: "answer", type: "string" },
      { name: "image", type: "file", file: { defaultPublicAccess: true } },
      { name: "set", type: "link", link: { table: "sets" } },
    ],
  },
  {
    name: "user_sets",
    columns: [
      { name: "user", type: "string" },
      { name: "set", type: "link", link: { table: "sets" } },
    ],
  },
  {
    name: "learnings",
    columns: [
      { name: "set", type: "link", link: { table: "sets" } },
      { name: "user", type: "string" },
      { name: "cards_total", type: "int" },
      { name: "cards_wrong", type: "int" },
      { name: "score", type: "float" },
      { name: "cards_correct", type: "int" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Sets = InferredTypes["sets"];
export type SetsRecord = Sets & XataRecord;

export type Cards = InferredTypes["cards"];
export type CardsRecord = Cards & XataRecord;

export type UserSets = InferredTypes["user_sets"];
export type UserSetsRecord = UserSets & XataRecord;

export type Learnings = InferredTypes["learnings"];
export type LearningsRecord = Learnings & XataRecord;

export type DatabaseSchema = {
  sets: SetsRecord;
  cards: CardsRecord;
  user_sets: UserSetsRecord;
  learnings: LearningsRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Danni-Zhang-s-workspace-pgavoq.us-east-1.xata.sh/db/flashcard",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
